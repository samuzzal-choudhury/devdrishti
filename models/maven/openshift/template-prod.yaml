apiVersion: v1
kind: Template
labels:
  template: f8a-hpf-insights
metadata:
  name: f8a-hpf-insights
  annotations:
    description: f8a-hpf-insights
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: f8a-hpf-insights-${HPF_SCORING_REGION}
    name: f8a-hpf-insights-${HPF_SCORING_REGION}
  spec:
    replicas: "${{REPLICAS}}"
    selector:
      service: f8a-hpf-insights-${HPF_SCORING_REGION}
    template:
      metadata:
        labels:
          service: f8a-hpf-insights-${HPF_SCORING_REGION}
      spec:
        restartPolicy: ${RESTART_POLICY}
        containers:
        - command:
          - /bin/entrypoint.sh
          env:
          - name: DEPLOYMENT_PREFIX
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: deployment-prefix
          - name: SERVICE_PORT
            value: "6006"
          - name: SERVICE_TIMEOUT
            value: "900"
          - name: HPF_SCORING_REGION
            value: "${HPF_SCORING_REGION}"
          - name: AWS_S3_ENDPOINT_URL
            value: ""
          - name: AWS_S3_BUCKET_NAME
            value: ${S3_BUCKET_NAME}
          - name: MODEL_VERSION
            value: "${{MODEL_VERSION}}"
          - name: FLASK_LOGGING_LEVEL
            value: ${FLASK_LOGGING_LEVEL}
          - name: MAX_COMPANION_REC_COUNT
            value: "${MAX_COMPANION_REC_COUNT}"
          - name: UNKNOWN_PACKAGES_THRESHOLD
            value: "${UNKNOWN_PACKAGES_THRESHOLD}"
          - name: MIN_REC_CONFIDENCE
            value: "${MIN_REC_CONFIDENCE}"
          - name: USE_CLOUD_SERVICES
            value: "${{USE_CLOUD_SERVICES}}"
          - name: USE_FEEDBACK
            value: "${{USE_FEEDBACK}}"
          - name: AWS_S3_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: s3-access-key-id
                name: aws
          - name: AWS_S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: s3-secret-access-key
                name: aws
          name: f8a-hpf-insights
          image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
          imagePullPolicy: Always
          ports:
          - containerPort: 6006
          livenessProbe:
            httpGet:
              path: /
              port: 6006
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 6006
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 30
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          # Added so that .npy can be downloaded from s3 and saved under /tmp. Gives write permission error otherwise.
          volumeMounts:
          - name: s3-data
            mountPath: /tmp
        volumes:
        - name: s3-data
          emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: f8a-hpf-insights-${HPF_SCORING_REGION}
    name: f8a-hpf-insights-${HPF_SCORING_REGION}
  spec:
    ports:
    - port: 6006
      targetPort: 0
    selector:
      service: f8a-hpf-insights-${HPF_SCORING_REGION}

parameters:
- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "100m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "700m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "200Mi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "700Mi"

- description: Docker registry where the image is
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "quay.io"

- description: Docker image to use
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "openshiftio/rhel-fabric8-analytics-f8a-hpf-insights"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"

- description: HPF Scoring Region - pypi or maven
  displayName: HPF Scoring Region
  required: true
  name: HPF_SCORING_REGION
  value: "maven"

- description: "Flask logging level (see: https://docs.python.org/3/library/logging.html#levels)"
  displayName: Flask logging level
  required: false
  name: FLASK_LOGGING_LEVEL
  value: "INFO"

- description: Number of deployment replicas
  displayName: Number of deployment replicas
  required: true
  name: REPLICAS
  value: "1"

- description: Ratio of known/unknown packages
  displayName: Ratio of known/unknown packages
  required: false
  name: UNKNOWN_PACKAGES_THRESHOLD
  value: "0.3"

- description: Max companion recommendations to return
  displayName: Max companion recommendations to return
  required: false
  name: MAX_COMPANION_REC_COUNT
  value: "5"

- description: Minimum recommendation confidence score
  displayName: Minimum recommendation confidence score
  required: true
  name: MIN_REC_CONFIDENCE
  value: "30"

- description: Restart policy
  displayName: Restart policy
  required: true
  name: RESTART_POLICY
  value: "Invalid" #this is intentional - we don't want developers to use this template. saas-herder sets the correct value here.

- description: Use S3 or Local datastore
  displayName: USe S3 or Local datastore
  required: true
  name: USE_CLOUD_SERVICES
  value: "True"

- description: Use feedback while scoring
  displayName: Use feedback while scoring
  required: true
  name: USE_FEEDBACK
  value: "False"

- description: "Name of the S3 bucket to use for scoring/training"
  displayName: S3 bucket name
  required: true
  name: S3_BUCKET_NAME
  value: "hpf-insights"

- description: "Model Version - Date Format YYYY-MM-DD"
  displayName: Model Version
  required: true
  name: MODEL_VERSION
  value: "2019-01-03"
